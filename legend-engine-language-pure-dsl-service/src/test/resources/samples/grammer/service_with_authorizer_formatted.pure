###Service
Service meta::pure::authorizedService
{
  pattern: 'url/myUrl/';
  documentation: 'this is just for context';
  authorizer: test::myAuthorizer;
  autoActivateUpdates: true;
  execution: Single
  {
    query: src: meta::transform::tests::Address[1]|$src.a;
    mapping: meta::myMapping;
    runtime:
    #{
      connections:
      [
        ModelStore:
        [
          id1: test::myConnection,
          id2:
          #{
            JsonModelConnection
            {
              class: meta::mySimpleClass;
              url: 'my_url';
            }
          }#,
          id3:
          #{
            JsonModelConnection
            {
              class: meta::mySimpleClass;
              url: 'my_url';
            }
          }#
        ]
      ];
    }#;
  }
  test: Single
  {
    data: 'moreThanData';
    asserts:
    [
      { [], res: Result<Any|*>[1]|$res.values->cast(@TabularDataSet).rows->size() == 1 },
      { [], res: Result<Any|*>[1]|$res.values->cast(@TabularDataSet).rows->size() == 1 }
    ];
  }
}
